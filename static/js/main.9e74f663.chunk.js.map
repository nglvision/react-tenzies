{"version":3,"sources":["components/NavBar.js","components/Footer.js","components/Dots.js","components/Die.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","darkMode","onClick","toggleDarkMode","Footer","Dots","Die","_React$useState","React","useState","dot","i","value","push","countDots","_React$useState2","Object","slicedToArray","dots","dotElements","map","key","nanoid","styles","backgroundColor","isHeld","boxShadow","holdDice","style","id","App","mode","setMode","_React$useState3","allNewDice","_React$useState4","dice","setDice","_React$useState5","_React$useState6","tenzies","setTenzies","newDice","Math","ceil","random","diceElements","die","currentId","prevDice","objectSpread","useEffect","allHeld","every","firstDie","allSameDice","components_NavBar","prevMode","react_confetti_min_default","components_Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9e74f663.chunk.js","sourcesContent":["import React from \"react\";\nfunction NavBar(props) {\n  return (\n    <nav className={props.darkMode ? \"dark\" : \"\"}>\n      <h3 className=\"nav--logo_text\">주사위 게임</h3>\n\n      <div className=\"toggler\">\n        <p className=\"toggler--light\">Light</p>\n        <div className=\"toggler--slider\" onClick={props.toggleDarkMode}>\n          <div className=\"toggler--slider--circle\"></div>\n        </div>\n        <p className=\"toggler--dark\">Dark</p>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nfunction Footer() {\n  return (\n    <footer>\n      <small>&copy; 2022 DevA development.</small>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nexport default function Dots(props) {\n  return (\n    <div className=\"dots\">\n      <div className=\"dot\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dots from \"./Dots\";\nimport { nanoid } from \"nanoid\";\n\nexport default function Die(props) {\n  const [dots, setDots] = React.useState(countDots());\n  function countDots() {\n    let dot = [];\n    for (let i = 0; i < props.value; i++) {\n      dot.push(i);\n    }\n    return dot;\n  }\n  const dotElements = dots.map(dot => (\n    <Dots key={nanoid()} value={props.value} />\n  ));\n  const styles = {\n    backgroundColor: props.isHeld ? \"#51d390\" : \"#fffefe\",\n    boxShadow: props.isHeld\n      ? \"inset 1px 1px 4px 2px #2e905d\"\n      : \"2px 3px 4px 2px #dedede\",\n  };\n  return (\n    <div className=\"die\" onClick={props.holdDice} style={styles}>\n      <div id={props.id} className=\"die-cell\">\n        {dotElements}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\nimport Die from \"./components/Die\";\nimport Dots from \"./components/Dots\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\n\nfunction App(props) {\n  const [mode, setMode] = React.useState(\"\");\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid(),\n      });\n    }\n    return newDice;\n  }\n\n  function rollDice() {\n    if (tenzies) {\n      setTenzies(false);\n      setDice(allNewDice());\n    }\n    setDice(prevDice => {\n      return prevDice.map(die => {\n        return die.isHeld\n          ? die\n          : {\n              value: Math.ceil(Math.random() * 6),\n              isHeld: false,\n              id: nanoid(),\n            };\n      });\n    });\n  }\n\n  function holdDice(currentId) {\n    setDice(prevDice => {\n      return prevDice.map(die => {\n        return die.id === currentId ? { ...die, isHeld: !die.isHeld } : die;\n      });\n    });\n  }\n\n  const diceElements = dice.map(die => (\n    <Die\n      key={die.id}\n      value={die.value}\n      isHeld={die.isHeld}\n      holdDice={() => holdDice(die.id)}\n    />\n  ));\n\n  React.useEffect(() => {\n    // Check the dice array for these winning conditions:\n    //   1. All dice are held, and\n    //  2. all dice have the same value\n    const allHeld = dice.every(die => die.isHeld);\n    const firstDie = dice[0].value;\n    const allSameDice = dice.every(die => die.value === firstDie);\n    if (allHeld && allSameDice) {\n      setTenzies(true);\n    }\n  }, [dice]);\n  // React.useEffect(() => {\n  //   // Check the dice array for these winning conditions:\n  //   //   1. All dice are held, and\n  //   //  2. all dice have the same value\n  //   let i = 0;\n  //   let sum = 0;\n  //   const heldDice = dice.map(die => {\n  //     if (die.isHeld) {\n  //       i++;\n  //       sum += die.value;\n  //     }\n  //     return die.value;\n  //   });\n  //   if (i === 10 && sum / 10 === heldDice[0]) {\n  //     setTenzies(true);\n  //     console.log(\"You won!\");\n  //   }\n  // }, [dice]);\n\n  function toggleDarkMode() {\n    setMode(prevMode => !prevMode);\n  }\n  return (\n    <div className={mode ? \"container\" : \"light-container\"}>\n      <NavBar darkMode={mode} toggleDarkMode={toggleDarkMode} />\n      <main>\n        {tenzies && <Confetti />}\n        <div className=\"box\">\n          <h1 className=\"title\">주사위 게임</h1>\n          <p className=\"instructions\">\n            같은 주사위 숫자가 될 때까지 돌리세요. 원하는 숫자를 클릭해\n            잡으세요.\n            {/* <br /> Roll until all dice are the same. Click each die to\n            freeze it at its current value between rolls. */}\n          </p>\n          <div className=\"inner-box\">{diceElements}</div>\n          <button className=\"roll\" onClick={rollDice}>\n            {tenzies ? \"새로운 게임\" : \"돌리기\"}\n          </button>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n//node -v\n// npm -v\n//npx create-react-app my-app\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}